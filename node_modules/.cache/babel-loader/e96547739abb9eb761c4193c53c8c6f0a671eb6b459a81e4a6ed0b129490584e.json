{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swapn\\\\Desktop\\\\ReactCloneProjects\\\\gmail_clone\\\\src\\\\LeftRight\\\\EmailList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import EmailListSettings from \"./EmailListSettings\";\n// import EmailType from \"./EmailTyps\";\n// import EmailBody from \"./EmailBody\";\n\n// const EmailList = () => {\n//   const [emailList, setEmailList] = useState([]);\n\n//   useEffect(() => {\n//     const getEmails = () => {\n//       fetch(\"https://clone-reactjssss-default-rtdb.firebaseio.com/mail.json\")\n//         .then((response) => {\n//           if (!response.ok) {\n//             throw new Error(\"Network response was not ok\");\n//           }\n//           return response.json();\n//         })\n//         .then((data) => {\n//           setEmailList(data);\n//         })\n//         .catch((error) => {\n//           console.error(error);\n//         });\n//     };\n\n//     getEmails();\n//   }, []);\n//   return (\n//     <div className=\"emaillist\">\n//       <EmailListSettings></EmailListSettings>\n//       <EmailType></EmailType>\n\n//       {emailList.map(({ id, data }) => {\n//         return (\n//           <EmailBody\n//             name={data.to}\n//             subject={data.subject}\n//             message={data.message}\n//           />\n//         );\n//       })}\n//     </div>\n//   );\n// };\n\n// export default EmailList;\n\nimport React, { useState, useEffect } from \"react\";\nimport EmailListSettings from \"./EmailListSettings\";\nimport EmailType from \"./EmailTyps\";\nimport EmailBody from \"./EmailBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailList = () => {\n  _s();\n  const [emailList, setEmailList] = useState([]);\n  useEffect(() => {\n    const getEmails = () => {\n      fetch(\"https://clone-reactjssss-default-rtdb.firebaseio.com/mail.json\").then(response => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      }).then(data => {\n        // Convert the Firebase data object into an array\n        const emailArray = Object.entries(data).map(([id, emailData]) => ({\n          id,\n          data: emailData\n        }));\n        setEmailList(emailArray);\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n    getEmails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emaillist\",\n    children: [/*#__PURE__*/_jsxDEV(EmailListSettings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailType, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), emailList.map(({\n      id,\n      data\n    }) => {\n      return /*#__PURE__*/_jsxDEV(EmailBody, {\n        // Don't forget to include a unique key for each item in the list\n        name: data.to,\n        subject: data.subject,\n        message: data.message\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailList, \"gyVcR1Ebw2uUOcslAonZhhmUIcc=\");\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useState","useEffect","EmailListSettings","EmailType","EmailBody","jsxDEV","_jsxDEV","EmailList","_s","emailList","setEmailList","getEmails","fetch","then","response","ok","Error","json","data","emailArray","Object","entries","map","id","emailData","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","to","subject","message","_c","$RefreshReg$"],"sources":["C:/Users/swapn/Desktop/ReactCloneProjects/gmail_clone/src/LeftRight/EmailList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import EmailListSettings from \"./EmailListSettings\";\r\n// import EmailType from \"./EmailTyps\";\r\n// import EmailBody from \"./EmailBody\";\r\n\r\n// const EmailList = () => {\r\n//   const [emailList, setEmailList] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const getEmails = () => {\r\n//       fetch(\"https://clone-reactjssss-default-rtdb.firebaseio.com/mail.json\")\r\n//         .then((response) => {\r\n//           if (!response.ok) {\r\n//             throw new Error(\"Network response was not ok\");\r\n//           }\r\n//           return response.json();\r\n//         })\r\n//         .then((data) => {\r\n//           setEmailList(data);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(error);\r\n//         });\r\n//     };\r\n\r\n//     getEmails();\r\n//   }, []);\r\n//   return (\r\n//     <div className=\"emaillist\">\r\n//       <EmailListSettings></EmailListSettings>\r\n//       <EmailType></EmailType>\r\n\r\n//       {emailList.map(({ id, data }) => {\r\n//         return (\r\n//           <EmailBody\r\n//             name={data.to}\r\n//             subject={data.subject}\r\n//             message={data.message}\r\n//           />\r\n//         );\r\n//       })}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EmailList;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport EmailListSettings from \"./EmailListSettings\";\r\nimport EmailType from \"./EmailTyps\";\r\nimport EmailBody from \"./EmailBody\";\r\n\r\nconst EmailList = () => {\r\n  const [emailList, setEmailList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getEmails = () => {\r\n      fetch(\"https://clone-reactjssss-default-rtdb.firebaseio.com/mail.json\")\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          // Convert the Firebase data object into an array\r\n          const emailArray = Object.entries(data).map(([id, emailData]) => ({\r\n            id,\r\n            data: emailData,\r\n          }));\r\n          setEmailList(emailArray);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    };\r\n\r\n    getEmails();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"emaillist\">\r\n      <EmailListSettings></EmailListSettings>\r\n      <EmailType></EmailType>\r\n\r\n      {emailList.map(({ id, data }) => {\r\n        return (\r\n          <EmailBody\r\n            key={id} // Don't forget to include a unique key for each item in the list\r\n            name={data.to}\r\n            subject={data.subject}\r\n            message={data.message}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailList;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAGA,CAAA,KAAM;MACtBC,KAAK,CAAC,gEAAgE,CAAC,CACpEC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;QACd;QACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,OAAO,CAACH,IAAI,CAAC,CAACI,GAAG,CAAC,CAAC,CAACC,EAAE,EAAEC,SAAS,CAAC,MAAM;UAChED,EAAE;UACFL,IAAI,EAAEM;QACR,CAAC,CAAC,CAAC;QACHd,YAAY,CAACS,UAAU,CAAC;MAC1B,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IAEDf,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvB,OAAA,CAACJ,iBAAiB;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC,eACvC3B,OAAA,CAACH,SAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EAEtBxB,SAAS,CAACa,GAAG,CAAC,CAAC;MAAEC,EAAE;MAAEL;IAAK,CAAC,KAAK;MAC/B,oBACEZ,OAAA,CAACF,SAAS;QACC;QACT8B,IAAI,EAAEhB,IAAI,CAACiB,EAAG;QACdC,OAAO,EAAElB,IAAI,CAACkB,OAAQ;QACtBC,OAAO,EAAEnB,IAAI,CAACmB;MAAQ,GAHjBd,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIR,CAAC;IAEN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA7CID,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}