{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swapn\\\\Desktop\\\\Expense-Tracker App\\\\expense-tracker\\\\src\\\\components\\\\AddTransaction.js\",\n  _s = $RefreshSig$();\n// import React, { useContext, useState } from \"react\";\n// import { GlobalContext } from \"../Context/GlobalContext\";\n// import { useEffect } from \"react\";\n\n// function AddTransaction() {\n//   const [text, setText] = useState(\"\");\n//   const [amount, setAmount] = useState(0);\n\n//   const { addTransaction } = useContext(GlobalContext);\n//   ////////////\n//   useEffect(() => {\n//     // Retrieve transactions from local storage on component mount\n//     const storedTransactions = JSON.parse(localStorage.getItem(\"transactions\"));\n//     if (storedTransactions) {\n//       addTransaction(storedTransactions);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     // Update local storage whenever transactions change\n//     localStorage.setItem(\"transactions\", JSON.stringify(addTransaction));\n//   }, [addTransaction]);\n//   /////////\n\n//   const onSubmit = (e) => {\n//     e.preventDefault();\n\n//     const newTransaction = {\n//       id: Math.floor(Math.random() * 100000000),\n//       text,\n//       amount: +amount,\n//     };\n//     addTransaction(newTransaction);\n//   };\n\n//   return (\n//     <>\n//       <h3>Add New Transaction </h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-control\">\n//           <label htmlFor=\"text\">Text</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter text...\"\n//             value={text}\n//             onChange={(e) => setText(e.target.value)}\n//           ></input>\n//         </div>\n//         <div className=\"form-control\">\n//           <label htmlFor=\"amount\">\n//             Amount <br></br>\n//           </label>\n//           <input\n//             type=\"number\"\n//             placeholder=\"Enter Amount...\"\n//             value={amount}\n//             onChange={(e) => setAmount(e.target.value)}\n//           ></input>\n//         </div>\n//         <button className=\"btn\">Add Transaction</button>\n//       </form>\n//     </>\n//   );\n// }\n\n// export default AddTransaction;\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { GlobalContext } from \"../Context/GlobalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddTransaction() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const {\n    addTransaction,\n    transactions\n  } = useContext(GlobalContext);\n\n  // Retrieve transactions from local storage on component mount\n  useEffect(() => {\n    const storedTransactions = JSON.parse(localStorage.getItem(\"transactions\"));\n    if (storedTransactions) {\n      addTransaction(storedTransactions);\n    }\n  }, []);\n\n  // Update local storage whenever transactions change\n  useEffect(() => {\n    localStorage.setItem(\"transactions\", JSON.stringify(transactions));\n  }, [transactions]);\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    };\n    addTransaction(newTransaction);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter text...\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter Amount...\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AddTransaction, \"/hUSW9AnQtz6Civ9Hcd9vG31hmw=\");\n_c = AddTransaction;\nexport default AddTransaction;\nvar _c;\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"names":["React","useContext","useState","useEffect","GlobalContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AddTransaction","_s","text","setText","amount","setAmount","addTransaction","transactions","storedTransactions","JSON","parse","localStorage","getItem","setItem","stringify","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/swapn/Desktop/Expense-Tracker App/expense-tracker/src/components/AddTransaction.js"],"sourcesContent":["// import React, { useContext, useState } from \"react\";\r\n// import { GlobalContext } from \"../Context/GlobalContext\";\r\n// import { useEffect } from \"react\";\r\n\r\n// function AddTransaction() {\r\n//   const [text, setText] = useState(\"\");\r\n//   const [amount, setAmount] = useState(0);\r\n\r\n//   const { addTransaction } = useContext(GlobalContext);\r\n//   ////////////\r\n//   useEffect(() => {\r\n//     // Retrieve transactions from local storage on component mount\r\n//     const storedTransactions = JSON.parse(localStorage.getItem(\"transactions\"));\r\n//     if (storedTransactions) {\r\n//       addTransaction(storedTransactions);\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     // Update local storage whenever transactions change\r\n//     localStorage.setItem(\"transactions\", JSON.stringify(addTransaction));\r\n//   }, [addTransaction]);\r\n//   /////////\r\n\r\n//   const onSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const newTransaction = {\r\n//       id: Math.floor(Math.random() * 100000000),\r\n//       text,\r\n//       amount: +amount,\r\n//     };\r\n//     addTransaction(newTransaction);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <h3>Add New Transaction </h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <div className=\"form-control\">\r\n//           <label htmlFor=\"text\">Text</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter text...\"\r\n//             value={text}\r\n//             onChange={(e) => setText(e.target.value)}\r\n//           ></input>\r\n//         </div>\r\n//         <div className=\"form-control\">\r\n//           <label htmlFor=\"amount\">\r\n//             Amount <br></br>\r\n//           </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"Enter Amount...\"\r\n//             value={amount}\r\n//             onChange={(e) => setAmount(e.target.value)}\r\n//           ></input>\r\n//         </div>\r\n//         <button className=\"btn\">Add Transaction</button>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default AddTransaction;\r\n\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalContext\";\r\n\r\nfunction AddTransaction() {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction, transactions } = useContext(GlobalContext);\r\n\r\n  // Retrieve transactions from local storage on component mount\r\n  useEffect(() => {\r\n    const storedTransactions = JSON.parse(localStorage.getItem(\"transactions\"));\r\n    if (storedTransactions) {\r\n      addTransaction(storedTransactions);\r\n    }\r\n  }, []);\r\n\r\n  // Update local storage whenever transactions change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n  }, [transactions]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n    addTransaction(newTransaction);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add New Transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter text...\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter Amount...\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add Transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddTransaction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}