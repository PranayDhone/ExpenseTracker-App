{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swapn\\\\Desktop\\\\ReactCloneProjects\\\\gmail_clone\\\\src\\\\Login\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./AuthPage.css\";\nimport LoaderEl from \"../../UI/Loader/Loader\";\nimport { useNavigate } from \"react-router-dom\"; //useHistory\n\n// import { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthPage() {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const confPassRef = useRef();\n  const navigate = useNavigate();\n  const [isPassSame, setIsPassSame] = useState(true);\n  const [isError, setIsError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailRef = useRef();\n  const passRef = useRef();\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    setIsPassSame(true);\n    setIsError(false);\n    if (passRef.current.value !== confPassRef.current.value) {\n      setIsPassSame(false);\n      return;\n    }\n    const email = emailRef.current.value;\n    const password = passRef.current.value;\n    if (isLogin) {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC6rxed4e1QR4XGx7EdDcF0k6oEVGRBvUM`, {\n          method: \"POST\",\n          body: JSON.stringify({\n            email,\n            password,\n            returnSecureToken: true\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setIsLoading(false);\n        console.log(response);\n        if (response.ok) {\n          localStorage.setItem(\"token\", response.idToken);\n          navigate(\"/\");\n        } else {\n          setIsError(\"sorry ! something went wrong\");\n        }\n        const data = await response.json();\n        localStorage.setItem(\"token\", data.idToken);\n        localStorage.setItem(\"email\", data.email);\n      } catch (err) {\n        setIsLoading(false);\n        setIsError(err);\n      }\n    } else {\n      try {\n        setIsLoading(true);\n        console.log(\"email and password is \", email, password);\n        const response = await fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC6rxed4e1QR4XGx7EdDcF0k6oEVGRBvUM`, {\n          method: \"POST\",\n          body: JSON.stringify({\n            email,\n            password,\n            returnSecureToken: true\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setIsLoading(false);\n        if (response.ok) {\n          console.log(\"your authantication is successfull,\", response);\n        }\n      } catch (err) {\n        setIsLoading(false);\n        setIsError(err);\n        throw new Error(\"your authantication faied because, \", err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoaderEl, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            ref: emailRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            ref: passRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"confirmPassword\",\n            id: \"password\",\n            ref: confPassRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), !isPassSame && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: \"Sorry both Passwrods should same\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: isError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: isLogin ? \"Log In\" : \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"toggle\",\n            onClick: switchAuthModeHandler,\n            children: isLogin ? \"Create new account\" : \"Login with existing account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthPage, \"Ia7OlO/vRjCKFR2HqaNGZ6FBhzI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","LoaderEl","useNavigate","jsxDEV","_jsxDEV","AuthPage","_s","isLogin","setIsLogin","confPassRef","navigate","isPassSame","setIsPassSame","isError","setIsError","isLoading","setIsLoading","emailRef","passRef","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","current","value","email","password","response","fetch","method","body","JSON","stringify","returnSecureToken","headers","console","log","ok","localStorage","setItem","idToken","data","json","err","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","ref","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/swapn/Desktop/ReactCloneProjects/gmail_clone/src/Login/Auth.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./AuthPage.css\";\r\nimport LoaderEl from \"../../UI/Loader/Loader\";\r\n\r\nimport { useNavigate } from \"react-router-dom\"; //useHistory\r\n\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction AuthPage() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const confPassRef = useRef();\r\n  const navigate = useNavigate();\r\n  const [isPassSame, setIsPassSame] = useState(true);\r\n  const [isError, setIsError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setIsPassSame(true);\r\n    setIsError(false);\r\n\r\n    if (passRef.current.value !== confPassRef.current.value) {\r\n      setIsPassSame(false);\r\n      return;\r\n    }\r\n    const email = emailRef.current.value;\r\n    const password = passRef.current.value;\r\n\r\n    if (isLogin) {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(\r\n          `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC6rxed4e1QR4XGx7EdDcF0k6oEVGRBvUM`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              email,\r\n              password,\r\n              returnSecureToken: true,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        setIsLoading(false);\r\n        console.log(response);\r\n        if (response.ok) {\r\n          localStorage.setItem(\"token\", response.idToken);\r\n          navigate(\"/\");\r\n        } else {\r\n          setIsError(\"sorry ! something went wrong\");\r\n        }\r\n        const data = await response.json();\r\n\r\n        localStorage.setItem(\"token\", data.idToken);\r\n        localStorage.setItem(\"email\", data.email);\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setIsError(err);\r\n      }\r\n    } else {\r\n      try {\r\n        setIsLoading(true);\r\n        console.log(\"email and password is \", email, password);\r\n        const response = await fetch(\r\n          `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC6rxed4e1QR4XGx7EdDcF0k6oEVGRBvUM`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              email,\r\n              password,\r\n              returnSecureToken: true,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        setIsLoading(false);\r\n\r\n        if (response.ok) {\r\n          console.log(\"your authantication is successfull,\", response);\r\n        }\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setIsError(err);\r\n        throw new Error(\"your authantication faied because, \", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <LoaderEl />}\r\n      <section className={\"auth\"}>\r\n        <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n        <form onSubmit={submitHandler}>\r\n          <div className={\"control\"}>\r\n            <label htmlFor=\"email\">Your Email</label>\r\n            <input type=\"email\" id=\"email\" ref={emailRef} required />\r\n          </div>\r\n          <div className={\"control\"}>\r\n            <label htmlFor=\"password\">Your Password</label>\r\n            <input type=\"password\" id=\"password\" ref={passRef} required />\r\n          </div>\r\n          <div className={\"control\"}>\r\n            <label htmlFor=\"password\">Confirm Password</label>\r\n            <input\r\n              type=\"confirmPassword\"\r\n              id=\"password\"\r\n              ref={confPassRef}\r\n              required\r\n            />\r\n          </div>\r\n          {!isPassSame && (\r\n            <p className=\"text-danger\">Sorry both Passwrods should same</p>\r\n          )}\r\n          {isError && <p className=\"text-danger\">{isError}</p>}\r\n          <div className={\"actions\"}>\r\n            <button type=\"submit\">{isLogin ? \"Log In\" : \"Sign Up\"}</button>\r\n            {/* <Link to='/resetpassword' className={\"toggle mb-0\"}>forgot password ?</Link> */}\r\n            <button\r\n              type=\"button\"\r\n              className={\"toggle\"}\r\n              onClick={switchAuthModeHandler}\r\n            >\r\n              {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}