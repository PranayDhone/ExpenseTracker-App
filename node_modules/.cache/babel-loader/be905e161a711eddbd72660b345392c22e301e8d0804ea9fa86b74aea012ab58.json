{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swapn\\\\Desktop\\\\ReactCloneProjects\\\\gmail_clone\\\\src\\\\Login\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthPage() {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const confPassRef = useRef();\n  const history = useHistory();\n  const [isPassSame, setIsPassSame] = useState(true);\n  const [isError, setIsError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailRef = useRef();\n  const passRef = useRef();\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    setIsPassSame(true);\n    setIsError(false);\n    if (passRef.current.value !== confPassRef.current.value) {\n      setIsPassSame(false);\n      return;\n    }\n    const email = emailRef.current.value;\n    const password = passRef.current.value;\n    try {\n      setIsLoading(true);\n      if (isLogin) {\n        // Sign in with email and password\n        await firebase.auth().signInWithEmailAndPassword(email, password);\n        history.push(\"/\");\n      } else {\n        // Sign up with email and password\n        await firebase.auth().createUserWithEmailAndPassword(email, password);\n        history.push(\"/\");\n      }\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      setIsError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hey.......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: isError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: isError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthPage, \"baaIV/dFIt2PuqaCzqCE/dAw3jA=\", false, function () {\n  return [useHistory];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useRef","useHistory","firebase","jsxDEV","_jsxDEV","AuthPage","_s","isLogin","setIsLogin","confPassRef","history","isPassSame","setIsPassSame","isError","setIsError","isLoading","setIsLoading","emailRef","passRef","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","current","value","email","password","auth","signInWithEmailAndPassword","push","createUserWithEmailAndPassword","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/swapn/Desktop/ReactCloneProjects/gmail_clone/src/Login/Auth.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"./Auth.css\";\r\n\r\nfunction AuthPage() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const confPassRef = useRef();\r\n  const history = useHistory();\r\n  const [isPassSame, setIsPassSame] = useState(true);\r\n  const [isError, setIsError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setIsPassSame(true);\r\n    setIsError(false);\r\n\r\n    if (passRef.current.value !== confPassRef.current.value) {\r\n      setIsPassSame(false);\r\n      return;\r\n    }\r\n    const email = emailRef.current.value;\r\n    const password = passRef.current.value;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      if (isLogin) {\r\n        // Sign in with email and password\r\n        await firebase.auth().signInWithEmailAndPassword(email, password);\r\n        history.push(\"/\");\r\n      } else {\r\n        // Sign up with email and password\r\n        await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n        history.push(\"/\");\r\n      }\r\n\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      setIsError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <p>Hey.......</p>}\r\n      <section className={\"auth\"}>\r\n        <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n        <form onSubmit={submitHandler}>\r\n          {/* ... Rest of your form */}\r\n          {isError && <p className=\"text-danger\">{isError}</p>}\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}