{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swapn\\\\Desktop\\\\ReactCloneProjects\\\\gmail_clone\\\\src\\\\LeftRight\\\\EmailList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport EmailListSettings from \"./EmailListSettings\";\nimport EmailType from \"./EmailTyps\";\nimport EmailBody from \"./EmailBody\";\nimport { MailActions } from \"../store/MailSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailList = () => {\n  _s();\n  const [emailList, setEmailList] = useState([]);\n  useEffect(() => {\n    const getEmails = () => {\n      fetch(\"https://clone-reactjssss-default-rtdb.firebaseio.com/mail.json\").then(response => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      }).then(data => {\n        setEmailList(data);\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n    getEmails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emaillist\",\n    children: [/*#__PURE__*/_jsxDEV(EmailListSettings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailType, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), emailList.map(({\n      id,\n      data\n    }) => {\n      return /*#__PURE__*/_jsxDEV(EmailBody, {\n        name: data.to,\n        subject: data.subject,\n        message: data.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailList, \"gyVcR1Ebw2uUOcslAonZhhmUIcc=\");\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useState","useEffect","EmailListSettings","EmailType","EmailBody","MailActions","jsxDEV","_jsxDEV","EmailList","_s","emailList","setEmailList","getEmails","fetch","then","response","ok","Error","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","name","to","subject","message","_c","$RefreshReg$"],"sources":["C:/Users/swapn/Desktop/ReactCloneProjects/gmail_clone/src/LeftRight/EmailList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport EmailListSettings from \"./EmailListSettings\";\r\nimport EmailType from \"./EmailTyps\";\r\nimport EmailBody from \"./EmailBody\";\r\nimport { MailActions } from \"../store/MailSlice\";\r\n\r\nconst EmailList = () => {\r\n  const [emailList, setEmailList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getEmails = () => {\r\n      fetch(\"https://clone-reactjssss-default-rtdb.firebaseio.com/mail.json\")\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          setEmailList(data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    };\r\n\r\n    getEmails();\r\n  }, []);\r\n  return (\r\n    <div className=\"emaillist\">\r\n      <EmailListSettings></EmailListSettings>\r\n      <EmailType></EmailType>\r\n\r\n      {emailList.map(({ id, data }) => {\r\n        return (\r\n          <EmailBody\r\n            name={data.to}\r\n            subject={data.subject}\r\n            message={data.message}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAGA,CAAA,KAAM;MACtBC,KAAK,CAAC,gEAAgE,CAAC,CACpEC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;QACdR,YAAY,CAACQ,IAAI,CAAC;MACpB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBACEL,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA,CAACL,iBAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC,eACvCrB,OAAA,CAACJ,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EAEtBlB,SAAS,CAACmB,GAAG,CAAC,CAAC;MAAEC,EAAE;MAAEX;IAAK,CAAC,KAAK;MAC/B,oBACEZ,OAAA,CAACH,SAAS;QACR2B,IAAI,EAAEZ,IAAI,CAACa,EAAG;QACdC,OAAO,EAAEd,IAAI,CAACc,OAAQ;QACtBC,OAAO,EAAEf,IAAI,CAACe;MAAQ;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAEN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}